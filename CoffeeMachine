package JetBrainsAcademy;

import java.util.Scanner;

public class CoffeeMachine {
    static Scanner scanner = new Scanner(System.in);

    static int[] supplies = new int[5];

    private static int water = 400;
    private static int milk = 540;
    private static int coffee = 120;
    private static int cups = 9;
    private static int money = 550;

    public static void setSupplies() {
        supplies[0] = water;
        supplies[1] = milk;
        supplies[2] = coffee;
        supplies[3] = cups;
        supplies[4] = money;
    }

    public enum STATES {
        CHOOSING_AN_ACTION, CHOOSING_A_VARIANT_OF_COFFEE, FILLING, TAKING_MONEY, GIVING_BALANCE, TURNED_OFF
    }

    static STATES state = STATES.CHOOSING_AN_ACTION;

    public static void main(String[] args) {
        CoffeeMachine.setSupplies();
        Scanner scanner = new Scanner(System.in);
        while(!CoffeeMachine.state.equals(CoffeeMachine.STATES.TURNED_OFF)) {
            if(CoffeeMachine.state.equals(CoffeeMachine.STATES.CHOOSING_AN_ACTION)) {
                System.out.println();
                System.out.println("Write action (buy, fill, take, remaining, exit):");
            }
            String input = scanner.nextLine();
            System.out.println();
            CoffeeMachine.work(input);
        }
    }

    public static void work(String input) {
        if (state.equals(STATES.CHOOSING_AN_ACTION)) {
            switch (input) {
                case "buy":
                    buy();
                    break;
                case "fill":
                    state = STATES.FILLING;
                    fill(supplies);
                    break;
                case "take":
                    state = STATES.TAKING_MONEY;
                    take(supplies);
                    break;
                case "remaining":
                    state = STATES.GIVING_BALANCE;
                    giveStatus(supplies);
                    break;
                case "exit":
                    state = STATES.TURNED_OFF;
                    break;
                default:
                    System.out.println("There is no such action");
            }
        } else if (state.equals(STATES.CHOOSING_A_VARIANT_OF_COFFEE)) {
            makingCoffee(supplies, input);
        }
}

        public static void buy() {
            System.out.println("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu:");
            state = STATES.CHOOSING_A_VARIANT_OF_COFFEE;
        }

        public static int[] makingCoffee(int supplies[], String input) {
            boolean makingCoffee = true;

            switch (input) {
                case "1":
                    if ((supplies[0] >= 250)&&(supplies[2] >= 16)&&(supplies[3] >= 1)) {
                        supplies[0] -= 250;
                        supplies[2] -= 16;
                        supplies[4] += 4;
                        supplies[3] -= 1;
                    }
                    else {
                        makingCoffee = false;
                    }
                    break;
                case "2":
                    if ((supplies[0] >= 350)&&(supplies[1] >= 75)&&(supplies[2] >= 20)&&(supplies[3] >= 1)) {
                        supplies[0] -= 350;
                        supplies[1] -= 75;
                        supplies[2] -= 20;
                        supplies[4] += 7;
                        supplies[3] -= 1;
                    }
                    else {
                        makingCoffee = false;
                    }
                    break;
                case "3":
                    if ((supplies[0] >= 200)&&(supplies[1] >= 100)&&(supplies[2] >= 12)&&(supplies[3] >= 1)) {
                        supplies[0] -= 200;
                        supplies[1] -= 100;
                        supplies[2] -= 12;
                        supplies[4] += 6;
                        supplies[3] -= 1;
                    }
                    else {
                        makingCoffee = false;
                    }
                    break;
                case "back":
                    break;
                default:
                    System.out.println("There is no such coffee");
            }
            if (!input.equals("back")) {
                if (makingCoffee) {
                    System.out.println("I have enough resources, making you a coffee!");
                } else {
                    System.out.println("Out of supplies, can't make the coffee");
                }
            }
            state = STATES.CHOOSING_AN_ACTION;

            return supplies;
        }

    public static int[] fill(int supplies[]) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Write how many ml of water do you want to add:");
        int water = scanner.nextInt();
        supplies[0] += water;
        System.out.println("Write how many ml of milk do you want to add:");
        int milk = scanner.nextInt();
        supplies[1] += milk;
        System.out.println("Write how many grams of coffee beans do you want to add:");
        int coffee = scanner.nextInt();
        supplies[2] += coffee;
        System.out.println("Write how many disposable cups of coffee do you want to add:");
        int cups = scanner.nextInt();
        supplies[3] += cups;
        state = STATES.CHOOSING_AN_ACTION;

        return supplies;
    }

    public static int[] take(int supplies[]) {
        System.out.println("I gave you $" + supplies[4]);
        supplies[4] = 0;
        state = STATES.CHOOSING_AN_ACTION;

        return supplies;
    }

    private static void giveStatus(int supplies[]) {
        System.out.println("The coffee machine has:");
        System.out.println(supplies[0] + " of water");
        System.out.println(supplies[1] + " of milk");
        System.out.println(supplies[2] + " of coffee beans");
        System.out.println(supplies[3] + " of disposable cups");
        System.out.println(supplies[4] + "$ of money");
        state = STATES.CHOOSING_AN_ACTION;
    }
    }
