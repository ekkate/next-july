package JetBrainsAcademy;

import java.util.Random;
import java.util.Scanner;

public class BullsAndCows2 {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        int turn = 1;
        boolean gameNotFinished = true;
        StringBuilder number = new StringBuilder();

        boolean[] bullsArray = new boolean[36];
        int cows = 0;
        int bulls = 0;
        String cowsText = "cow";
        String bullsText = "bull";
        int digits = 0;
        String length;
        int numberOfSymbols = 0;
        String symbols;

        System.out.println("Please, enter the secret code's length:");

        length = scanner.nextLine();

        try {
            digits = Integer.parseInt(length);
        } catch (NumberFormatException e) {
            System.out.println("Error: " + length + " isn't a valid number.");
            return;
        }

        if (digits == 0) {
            System.out.println("Error: " + length + " isn't a valid number.");
            return;
        }

            System.out.println("Please, enter the number of possible symbols in the code:");
            symbols = scanner.nextLine();

            try {
                numberOfSymbols = Integer.parseInt(symbols);
            } catch (NumberFormatException e) {
                System.out.println("Error: " + symbols + " isn't a valid number.");
                return;
            }

        if (digits > numberOfSymbols) {

            System.out.println("Error: it's not possible to generate a code with a length of " + digits +
                    " with " + numberOfSymbols + " unique symbols.");
            return;
        }

            if (numberOfSymbols > bullsArray.length) {

                System.out.println("Error: maximum number of possible symbols in the code is 36 (0-9, a-z).");

            } else {

                Random random = new Random();
                int randomNumber;
                boolean unique;
                char convertedNumberToChar;

                while (number.length() < digits) {

                    randomNumber = random.nextInt(numberOfSymbols + 1);
                    unique = true;
                    convertedNumberToChar = convertRandomNumberToChar(randomNumber);

                    for ( int j = 0 ; j < number.length() ; j++ ) {
                        if (convertedNumberToChar == number.charAt(j)) {
                            unique = false;
                            break;
                        }
                    }
                    if (unique) {
                        number.append(convertedNumberToChar);
                    }
/*                    if (number.length() == digits) {
                        break;
                    }*/
                }

                System.out.println(number);
                System.out.print("The secret is prepared: ");

                for ( int i = 0 ; i < digits ; i++ ) {
                    System.out.print("*");
                }

                int text1 = 0;
                String text2 = "";

                if (numberOfSymbols < 11) {

                    text1 = numberOfSymbols - 1;

                } else {
                    text1 = 9;
                    text2 = ", a-" + convertRandomNumberToChar(numberOfSymbols - 1);
                }

                System.out.println(" (0-" + text1 + text2 + ").");
                System.out.println("Okay, let's start a game!");
            }

            String input;

            while (gameNotFinished) {

                System.out.println("Turn " + turn + ":");
                turn++;

                input = scanner.nextLine();

                if (input.length()!= number.length()) {
                    System.out.println("Error: the length of the answer is wrong!");
                    return;
                }

                for ( int i = 0 ; i < number.length() ; i++ ) {
                    bullsArray[ i ] = false;
                }

                bulls = 0;

                for ( int i = 0 ; i < number.length() ; i++ ) {
                    if (input.charAt(i) == number.charAt(i)) {
                        bullsArray[ i ] = true;
                        bulls++;
                    }
                }

                if (bulls == 1) {
                    bullsText = "bull";
                } else {
                    bullsText = "bulls";
                }

                cows = 0;

                for ( int i = 0 ; i < number.length() ; i++ ) {
                    if (!bullsArray[ i ]) {
                        for ( int j = 0 ; j < number.length() ; j++ ) {
                            if (input.charAt(i) == number.charAt(j)) {
                                cows++;
                            }
                        }
                    }
                }
                if (cows == 1) {
                    cowsText = "cow";
                } else {
                    cowsText = "cows";
                }

                if (bulls == 0 && cows > 0) {
                    System.out.println("Grade: " + cows + " " + cowsText);
                } else if (cows == 0 && bulls > 0) {
                    System.out.println("Grade: " + bulls + " " + bullsText);
                } else {
                    System.out.println("Grade: " + bulls + " " + bullsText + " and " + cows + " " + cowsText);
                }

                if (bulls == digits) {
                    gameNotFinished = false;
                    System.out.println("Congratulations! You guessed the secret code.");
                }
            }
        }

        public static char convertRandomNumberToChar(int randomNumber) {

        char c = '#';

        switch (randomNumber) {
            case 0:
                c = '0';
            case 1:
                c = '1';
                break;
            case 2:
                c = '2';
                break;
            case 3:
                c = '3';
                break;
            case 4:
                c = '4';
                break;
            case 5:
                c = '5';
                break;
            case 6:
                c = '6';
                break;
            case 7:
                c = '7';
                break;
            case 8:
                c = '8';
                break;
            case 9:
                c = '9';
                break;
            case 10:
                c = 'a';
                break;
            case 11:
                c = 'b';
                break;
            case 12:
                c = 'c';
                break;
            case 13:
                c = 'd';
                break;
            case 14:
                c = 'e';
                break;
            case 15:
                c = 'f';
                break;
            case 16:
                c = 'g';
                break;
            case 17:
                c = 'h';
                break;
            case 18:
                c = 'i';
                break;
            case 19:
                c = 'j';
                break;
            case 20:
                c = 'k';
                break;
            case 21:
                c = 'l';
                break;
            case 22:
                c = 'm';
                break;
            case 23:
                c = 'n';
                break;
            case 24:
                c = 'o';
                break;
            case 25:
                c = 'p';
                break;
            case 26:
                c = 'q';
                break;
            case 27:
                c = 'r';
                break;
            case 28:
                c = 's';
                break;
            case 29:
                c = 't';
                break;
            case 30:
                c = 'u';
                break;
            case 31:
                c = 'v';
                break;
            case 32:
                c = 'w';
                break;
            case 33:
                c = 'x';
                break;
            case 34:
                c = 'y';
                break;
            case 35:
                c = 'z';
                break;
        }

        return c;
        }
}
